{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Booking_src_Cosmos",
						"type": "DatasetReference"
					},
					"name": "BookingData",
					"description": "Bookings data from cosmos DB"
				},
				{
					"dataset": {
						"referenceName": "bookings_fact_synapse",
						"type": "DatasetReference"
					},
					"name": "SynapeFacttable"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "bookings_fact_synapse",
						"type": "DatasetReference"
					},
					"name": "Dataload",
					"rejectedDataLinkedService": {
						"referenceName": "AirBnBAdls",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "DerivingColumns",
					"description": "Deriving new column based on old columns"
				},
				{
					"name": "lookupSynapse"
				},
				{
					"name": "AlterRowForUpdate",
					"description": "Inserting, Updating, deleting and/or upserting using expression on column \n'SynapseFacttable@Booking_id'"
				},
				{
					"name": "finalcolumns"
				}
			],
			"scriptLines": [
				"source(output(",
				"          booking_id as string,",
				"          property_id as string,",
				"          customer_id as integer,",
				"          owner_id as string,",
				"          check_in_date as date,",
				"          check_out_date as date,",
				"          booking_date as timestamp,",
				"          amount as double,",
				"          currency as string,",
				"          property_location as (city as string, country as string),",
				"          timestamp as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     format: 'document') ~> BookingData",
				"source(output(",
				"          booking_id as string,",
				"          property_id as string,",
				"          customer_id as integer,",
				"          owner_id as string,",
				"          check_in_date as date,",
				"          check_out_date as date,",
				"          booking_date as timestamp,",
				"          amount as double,",
				"          currency as string,",
				"          city as string,",
				"          country as string,",
				"          full_address as string,",
				"          stay_duration as long,",
				"          booking_year as integer,",
				"          booking_month as integer,",
				"          timestamp as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: true) ~> SynapeFacttable",
				"BookingData derive(booking_id = booking_id,",
				"          property_id = property_id,",
				"          customer_id = customer_id,",
				"          owner_id = owner_id,",
				"          check_in_date = check_in_date,",
				"          check_out_date = check_out_date,",
				"          booking_date = booking_date,",
				"          amount = case(currency != 'INR', amount*80 , amount),",
				"          currency = \"INR\",",
				"          city = property_location.city,",
				"          country = property_location.country,",
				"          full_address = concatWS(',',property_location.city,property_location.country),",
				"          stay_duration =  check_in_date - check_out_date,",
				"          booking_year = year(booking_date),",
				"          booking_month = month(booking_date),",
				"          timestamp = timestamp,",
				"     partitionBy('hash', 1)) ~> DerivingColumns",
				"DerivingColumns, SynapeFacttable lookup(DerivingColumns@booking_id == SynapeFacttable@booking_id,",
				"     multiple: false,",
				"     pickup: 'first',",
				"     desc(SynapeFacttable@booking_id, true),",
				"     broadcast: 'auto')~> lookupSynapse",
				"lookupSynapse alterRow(insertIf(isNull(SynapeFacttable@booking_id)),",
				"     upsertIf(not(isNull(SynapeFacttable@booking_id)))) ~> AlterRowForUpdate",
				"AlterRowForUpdate select(mapColumn(",
				"          booking_id = DerivingColumns@booking_id,",
				"          property_id = DerivingColumns@property_id,",
				"          customer_id = DerivingColumns@customer_id,",
				"          owner_id = DerivingColumns@owner_id,",
				"          check_in_date = DerivingColumns@check_in_date,",
				"          check_out_date = DerivingColumns@check_out_date,",
				"          booking_date = DerivingColumns@booking_date,",
				"          amount = DerivingColumns@amount,",
				"          currency = DerivingColumns@currency,",
				"          timestamp = DerivingColumns@timestamp,",
				"          city = DerivingColumns@city,",
				"          country = DerivingColumns@country,",
				"          full_address = DerivingColumns@full_address,",
				"          stay_duration = DerivingColumns@stay_duration,",
				"          booking_year = DerivingColumns@booking_year,",
				"          booking_month = DerivingColumns@booking_month",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> finalcolumns",
				"finalcolumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          booking_id as string,",
				"          property_id as string,",
				"          customer_id as integer,",
				"          owner_id as string,",
				"          check_in_date as date,",
				"          check_out_date as date,",
				"          booking_date as timestamp,",
				"          amount as double,",
				"          currency as string,",
				"          city as string,",
				"          country as string,",
				"          full_address as string,",
				"          stay_duration as long,",
				"          booking_year as integer,",
				"          booking_month as integer,",
				"          timestamp as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['customer_id'],",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     dateFormat:'dd/MM/yyyy',",
				"     timestampFormat:'MM/dd/yyyy HH:mm:ss',",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          booking_id,",
				"          property_id,",
				"          customer_id,",
				"          owner_id,",
				"          check_in_date,",
				"          check_out_date,",
				"          booking_date,",
				"          amount,",
				"          currency,",
				"          city,",
				"          country,",
				"          full_address,",
				"          stay_duration,",
				"          booking_year,",
				"          booking_month,",
				"          timestamp",
				"     )) ~> Dataload"
			]
		}
	}
}