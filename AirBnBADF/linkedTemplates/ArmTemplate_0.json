{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "AirBnBADF"
		},
		"AirBnB_Synapse_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AirBnB_Synapse'"
		},
		"AirBnb_cosmosDB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AirBnb_cosmosDB'"
		},
		"AirBnBAdls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://airbnbstracc.dfs.core.windows.net/"
		},
		"AirBnB_Synapse_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "airbnb-synapse-worspace.sql.azuresynapse.net"
		},
		"AirBnB_Synapse_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "AirBnB_Sql_pool"
		},
		"AirBnB_Synapse_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sqladminuser"
		},
		"AirBnB_Synapse_ms_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "airbnb-synapse-worspace.sql.azuresynapse.net"
		},
		"AirBnB_Synapse_ms_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "AirBnB_Sql_pool"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AirBnBAdls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AirBnBAdls_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AirBnB_Synapse')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"server": "[parameters('AirBnB_Synapse_properties_typeProperties_server')]",
					"database": "[parameters('AirBnB_Synapse_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('AirBnB_Synapse_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AirBnB_Synapse_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AirBnB_Synapse_ms')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"server": "[parameters('AirBnB_Synapse_ms_properties_typeProperties_server')]",
					"database": "[parameters('AirBnB_Synapse_ms_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SystemAssignedManagedIdentity"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AirBnb_cosmosDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('AirBnb_cosmosDB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Booking_src_Cosmos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AirBnb_cosmosDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {
					"type": "object",
					"properties": {
						"booking_id": {
							"type": "string"
						},
						"property_id": {
							"type": "string"
						},
						"customer_id": {
							"type": "integer"
						},
						"owner_id": {
							"type": "string"
						},
						"check_in_date": {
							"type": "string"
						},
						"check_out_date": {
							"type": "string"
						},
						"booking_date": {
							"type": "string"
						},
						"amount": {
							"type": "number"
						},
						"currency": {
							"type": "string"
						},
						"property_location": {
							"type": "object",
							"properties": {
								"city": {
									"type": "string"
								},
								"country": {
									"type": "string"
								}
							}
						},
						"timestamp": {
							"type": "string"
						}
					}
				},
				"typeProperties": {
					"collectionName": "Bookings"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AirBnb_cosmosDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Customer_archieve_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AirBnBAdls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Customer_Archeive_data",
						"fileSystem": "customersdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AirBnBAdls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Customer_dim_data_synapse')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AirBnB_Synapse_ms",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "customer_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "first_name",
						"type": "nvarchar"
					},
					{
						"name": "last_name",
						"type": "nvarchar"
					},
					{
						"name": "email",
						"type": "nvarchar"
					},
					{
						"name": "phone_number",
						"type": "nvarchar"
					},
					{
						"name": "address",
						"type": "nvarchar"
					},
					{
						"name": "city",
						"type": "nvarchar"
					},
					{
						"name": "state",
						"type": "nvarchar"
					},
					{
						"name": "country",
						"type": "nvarchar"
					},
					{
						"name": "zip_code",
						"type": "nvarchar"
					},
					{
						"name": "signup_date",
						"type": "date"
					},
					{
						"name": "last_login",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "total_bookings",
						"type": "int",
						"precision": 10
					},
					{
						"name": "total_spent",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "preferred_language",
						"type": "nvarchar"
					},
					{
						"name": "referral_code",
						"type": "nvarchar"
					},
					{
						"name": "account_status",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "airbnb",
					"table": "customer_dim"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AirBnB_Synapse_ms')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Customer_raw_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AirBnBAdls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Customer_raw_data",
						"fileSystem": "customersdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AirBnBAdls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bookings_fact_synapse')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AirBnB_Synapse_ms",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "booking_id",
						"type": "nvarchar"
					},
					{
						"name": "property_id",
						"type": "nvarchar"
					},
					{
						"name": "customer_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "owner_id",
						"type": "nvarchar"
					},
					{
						"name": "check_in_date",
						"type": "date"
					},
					{
						"name": "check_out_date",
						"type": "date"
					},
					{
						"name": "booking_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "amount",
						"type": "float",
						"precision": 15
					},
					{
						"name": "currency",
						"type": "nvarchar"
					},
					{
						"name": "city",
						"type": "nvarchar"
					},
					{
						"name": "country",
						"type": "nvarchar"
					},
					{
						"name": "full_address",
						"type": "nvarchar"
					},
					{
						"name": "stay_duration",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "booking_year",
						"type": "int",
						"precision": 10
					},
					{
						"name": "booking_month",
						"type": "int",
						"precision": 10
					},
					{
						"name": "timestamp",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "airbnb",
					"table": "customer_dim"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AirBnB_Synapse_ms')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Customer_Dim_data_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get List of files",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Customer_raw_data",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Each Files",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get List of files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get List of files').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Moving to Synapse",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"wildcardFolderPath": "Customer_raw_data",
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "SqlDWSink",
											"writeBehavior": "Upsert",
											"upsertSettings": {
												"keys": [
													"customer_id"
												],
												"interimSchemaName": ""
											},
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Customer_raw_data",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Customer_dim_data_synapse",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Moving to Archieve",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Moving to Synapse",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"wildcardFolderPath": "Customer_raw_data",
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Customer_raw_data",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Customer_archieve_data",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Deleting Raw Data",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Moving to Archieve",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "Customer_raw_data",
											"type": "DatasetReference",
											"parameters": {}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "AirBnBAdls",
												"type": "LinkedServiceReference"
											},
											"path": "customersdata/raw_data_delete_logs"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"wildcardFileName": {
												"value": "@item().name",
												"type": "Expression"
											},
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Customer_raw_data')]",
				"[concat(variables('factoryId'), '/datasets/Customer_dim_data_synapse')]",
				"[concat(variables('factoryId'), '/datasets/Customer_archieve_data')]",
				"[concat(variables('factoryId'), '/linkedServices/AirBnBAdls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bookings_DataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Booking_src_Cosmos",
								"type": "DatasetReference"
							},
							"name": "BookingData",
							"description": "Bookings data from cosmos DB"
						},
						{
							"dataset": {
								"referenceName": "bookings_fact_synapse",
								"type": "DatasetReference"
							},
							"name": "SynapeFacttable"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "bookings_fact_synapse",
								"type": "DatasetReference"
							},
							"name": "Dataload",
							"rejectedDataLinkedService": {
								"referenceName": "AirBnBAdls",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "DerivingColumns",
							"description": "Deriving new column based on old columns"
						},
						{
							"name": "lookupSynapse"
						},
						{
							"name": "AlterRowForUpdate",
							"description": "Inserting, Updating, deleting and/or upserting using expression on column \n'SynapseFacttable@Booking_id'"
						},
						{
							"name": "finalcolumns"
						}
					],
					"scriptLines": [
						"source(output(",
						"          booking_id as string,",
						"          property_id as string,",
						"          customer_id as integer,",
						"          owner_id as string,",
						"          check_in_date as date,",
						"          check_out_date as date,",
						"          booking_date as timestamp,",
						"          amount as double,",
						"          currency as string,",
						"          property_location as (city as string, country as string),",
						"          timestamp as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     format: 'document') ~> BookingData",
						"source(output(",
						"          booking_id as string,",
						"          property_id as string,",
						"          customer_id as integer,",
						"          owner_id as string,",
						"          check_in_date as date,",
						"          check_out_date as date,",
						"          booking_date as timestamp,",
						"          amount as double,",
						"          currency as string,",
						"          city as string,",
						"          country as string,",
						"          full_address as string,",
						"          stay_duration as long,",
						"          booking_year as integer,",
						"          booking_month as integer,",
						"          timestamp as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table',",
						"     staged: true) ~> SynapeFacttable",
						"BookingData derive(booking_id = booking_id,",
						"          property_id = property_id,",
						"          customer_id = customer_id,",
						"          owner_id = owner_id,",
						"          check_in_date = check_in_date,",
						"          check_out_date = check_out_date,",
						"          booking_date = booking_date,",
						"          amount = case(currency != 'INR', amount*80 , amount),",
						"          currency = \"INR\",",
						"          city = property_location.city,",
						"          country = property_location.country,",
						"          full_address = concatWS(',',property_location.city,property_location.country),",
						"          stay_duration = check_in_date - check_out_date,",
						"          booking_year = year(booking_date),",
						"          booking_month = month(booking_date),",
						"          timestamp = timestamp,",
						"     partitionBy('hash', 1)) ~> DerivingColumns",
						"DerivingColumns, SynapeFacttable lookup(DerivingColumns@booking_id == SynapeFacttable@booking_id,",
						"     multiple: false,",
						"     pickup: 'first',",
						"     desc(SynapeFacttable@booking_id, true),",
						"     broadcast: 'auto')~> lookupSynapse",
						"lookupSynapse alterRow(insertIf(isNull(SynapeFacttable@booking_id)),",
						"     upsertIf(not(isNull(SynapeFacttable@booking_id)))) ~> AlterRowForUpdate",
						"AlterRowForUpdate select(mapColumn(",
						"          booking_id = DerivingColumns@booking_id,",
						"          property_id = DerivingColumns@property_id,",
						"          customer_id = DerivingColumns@customer_id,",
						"          owner_id = DerivingColumns@owner_id,",
						"          check_in_date = DerivingColumns@check_in_date,",
						"          check_out_date = DerivingColumns@check_out_date,",
						"          booking_date = DerivingColumns@booking_date,",
						"          amount = DerivingColumns@amount,",
						"          currency = DerivingColumns@currency,",
						"          timestamp = DerivingColumns@timestamp,",
						"          city = DerivingColumns@city,",
						"          country = DerivingColumns@country,",
						"          full_address = DerivingColumns@full_address,",
						"          stay_duration = DerivingColumns@stay_duration,",
						"          booking_year = DerivingColumns@booking_year,",
						"          booking_month = DerivingColumns@booking_month",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> finalcolumns",
						"finalcolumns sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          booking_id as string,",
						"          property_id as string,",
						"          customer_id as integer,",
						"          owner_id as string,",
						"          check_in_date as date,",
						"          check_out_date as date,",
						"          booking_date as timestamp,",
						"          amount as double,",
						"          currency as string,",
						"          city as string,",
						"          country as string,",
						"          full_address as string,",
						"          stay_duration as long,",
						"          booking_year as integer,",
						"          booking_month as integer,",
						"          timestamp as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:true,",
						"     upsertable:false,",
						"     keys:['customer_id'],",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     dateFormat:'dd/MM/yyyy',",
						"     timestampFormat:'MM/dd/yyyy HH:mm:ss',",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          booking_id,",
						"          property_id,",
						"          customer_id,",
						"          owner_id,",
						"          check_in_date,",
						"          check_out_date,",
						"          booking_date,",
						"          amount,",
						"          currency,",
						"          city,",
						"          country,",
						"          full_address,",
						"          stay_duration,",
						"          booking_year,",
						"          booking_month,",
						"          timestamp",
						"     )) ~> Dataload"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Booking_src_Cosmos')]",
				"[concat(variables('factoryId'), '/datasets/bookings_fact_synapse')]",
				"[concat(variables('factoryId'), '/linkedServices/AirBnBAdls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/booking_fact_data_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Bookings_DataFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Bookings_DataFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"BookingData": {},
									"SynapeFacttable": {},
									"Dataload": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "AirBnBAdls",
									"type": "LinkedServiceReference"
								},
								"folderPath": "customersdata/Synapse Stage"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "TriggerStoredProcedure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Bookings_DataFlow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[airbnb].[BookingAggregation]"
						},
						"linkedServiceName": {
							"referenceName": "AirBnB_Synapse_ms",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Bookings_DataFlow')]",
				"[concat(variables('factoryId'), '/linkedServices/AirBnBAdls')]",
				"[concat(variables('factoryId'), '/linkedServices/AirBnB_Synapse_ms')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Execute_customer_and_booking_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Customer_data_pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Customer_Dim_data_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Bookings_data_pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Customer_data_pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "booking_fact_data_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Customer_Dim_data_load')]",
				"[concat(variables('factoryId'), '/pipelines/booking_fact_data_load')]"
			]
		}
	]
}